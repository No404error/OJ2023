#include<iostream>
#include<queue>
using namespace std;

typedef unsigned long long ll;

// ll bfs(int n){

//     if(n==1)
//         return 1;

//     queue<ll> q;
//     q.push(1);

//     while(!q.empty()){
//         ll num=q.front(),n1,n2;
//         q.pop();

//         n1=num*10+1;
//         if(!(n1%n))
//             return n1;
//         else 
//             q.push(n1);
        
//         n2=num*10;
//         if(!(n2%n))
//             return n2;
//         else 
//             q.push(n2);

//     }
//     return 0;
// }

ll form[202]={0,1ULL,10ULL,111ULL,100ULL,10ULL,1110ULL,1001ULL,1000ULL,111111111ULL,10ULL,11ULL,11100ULL,1001ULL,10010ULL,1110ULL,10000ULL,11101ULL,1111111110ULL,11001ULL,100ULL,10101ULL,110ULL,110101ULL,111000ULL,100ULL,10010ULL,1111111101ULL,100100ULL,1101101ULL,1110ULL,111011ULL,100000ULL,111111ULL,111010ULL,10010ULL,11111111100ULL,111ULL,110010ULL,10101ULL,1000ULL,11111ULL,101010ULL,1101101ULL,1100ULL,1111111110ULL,1101010ULL,10011ULL,1110000ULL,1100001ULL,100ULL,100011ULL,100100ULL,100011ULL,11111111010ULL,110ULL,1001000ULL,11001ULL,11011010ULL,11011111ULL,11100ULL,100101ULL,1110110ULL,1111011111ULL,1000000ULL,10010ULL,1111110ULL,1101011ULL,1110100ULL,11111001ULL,10010ULL,10011ULL,111111111000ULL,10001ULL,1110ULL,11100ULL,1100100ULL,1001ULL,101010ULL,11101001ULL,10000ULL,1111111101ULL,111110ULL,101011ULL,1010100ULL,111010ULL,11011010ULL,11010111ULL,11000ULL,11010101ULL,1111111110ULL,1001ULL,11010100ULL,10000011ULL,100110ULL,110010ULL,11100000ULL,11100001ULL,11000010ULL,111111111111111111ULL,100ULL,101ULL,1000110ULL,11100001ULL,1001000ULL,101010ULL,1000110ULL,110100111ULL,111111110100ULL,1111111011ULL,110ULL,111ULL,10010000ULL,1011011ULL,110010ULL,1101010ULL,110110100ULL,11111110101ULL,110111110ULL,110001101ULL,111000ULL,11011ULL,1001010ULL,10011100011ULL,11101100ULL,1000ULL,11110111110ULL,11010011ULL,10000000ULL,100100001ULL,10010ULL,101001ULL,11111100ULL,11101111ULL,11010110ULL,11111111010ULL,11101000ULL,10001ULL,111110010ULL,110110101ULL,100100ULL,10011ULL,100110ULL,1001ULL,1111111110000ULL,11011010ULL,100010ULL,1100001ULL,11100ULL,110111ULL,11100ULL,1110001ULL,11001000ULL,11111011011ULL,10010ULL,1110110ULL,1010100ULL,10101101011ULL,111010010ULL,100011ULL,100000ULL,11101111ULL,11111111010ULL,1010111ULL,1111100ULL,1111110ULL,1010110ULL,11111011ULL,10101000ULL,10111101ULL,111010ULL,1111011111ULL,110110100ULL,1111111011ULL,110101110ULL,100100ULL,110000ULL,101110011ULL,110101010ULL,11010111ULL,11111111100ULL,1001111ULL,10010ULL,100101ULL,110101000ULL,1110ULL,100000110ULL,1001011ULL,1001100ULL,1111111100001ULL,110010ULL,11101111ULL,111000000ULL,11001ULL,111000010ULL,101010ULL,110000100ULL,1101000101ULL,1111111111111111110ULL,111000011ULL,1000ULL};

int main(){
    int n;
    while(true){
        cin>>n;
        if(!n)
            break;
        cout<<form[n]<<endl;
    }
    cin>>n;
    // for(int i=1;i<=200;i++)
    //     cout<<bfs(i)<<"ULL,";
    return 0;
}